const { Telegraf } = require("telegraf");
require("dotenv").config();

const bot = new Telegraf(process.env.BOT_TOKEN);

bot.start((ctx) => {
  ctx.reply("–ü—Ä–∏–≤–µ—Ç, –ê–ª–∏–Ω–∞!");
  setTimeout(() => {
    ctx.reply("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è! üéâ");
    setTimeout(() => {
      ctx.reply("–ù–∞–ø–∏—à–∏ –º–Ω–µ –∫–æ–¥–æ–≤—É—é —Ñ—Ä–∞–∑—É, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É, –≥–¥–µ –∏—Å–∫–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫");
    }, 500);
  }, 500);
});
bot.command("check", (ctx) => ctx.reply("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"));
bot.help((ctx) => ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ –∫–æ–¥–æ–≤—É—é —Ñ—Ä–∞–∑—É"));
bot.on("text", (ctx) => {
  if (
    /–∞–ª–∏–Ω–∫–∞[-\s](—Å—É–ø–µ—Ä[-\s]?—Å—Ç–∞—Ä|super[-\s]?star)/.test(
      ctx.message.text.toLowerCase()
    )
  ) {
    ctx.reply("–•–º–º.. –¥–∞–π-–∫–∞ –ø–æ–¥—É–º–∞—Ç—å.. ü§î");
    setTimeout(() => {
      ctx.reply("–ü–æ–∂–∞–ª—É–π..");
      setTimeout(() => {
        ctx.reply(
          "–î–∞, –¥—É–º–∞—é, —Ñ—Ä–∞–∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è! –¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—É–ø–µ—Ä-–∑–≤–µ–∑–¥–∞ üåü"
        );
        setTimeout(() => {
          ctx.reply(
            "–ò—â–∏ —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫ –≤–Ω—É—Ç—Ä–∏ —Ç–æ–≥–æ, —á—Ç–æ –æ—Å–≤–µ—â–∞–µ—Ç —Ç–µ–±—è –≤–æ –≤—Ä–µ–º—è —Å—ä–µ–º–æ–∫ –¢–∏–∫-–¢–æ–∫–æ–≤"
          );
        }, 1000);
      }, 2000);
    }, 2000);
  } else {
    ctx.reply("–ë–æ—é—Å—å, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ñ—Ä–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é");
  }
});
bot.launch();
